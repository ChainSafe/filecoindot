// Copyright 2021 ChainSafe Systems
// SPDX-License-Identifier: LGPL-3.0-only

//! Autogenerated weights for `filecoindot`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-02-08, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/filecoindot-template
// benchmark
// -p
// filecoindot
// -e
// *
// --execution
// wasm
// --wasm-execution
// compiled
// --raw
// --output
// ./substrate-node-example/runtime/src/weights/filecoindot.rs
// --steps
// 50
// --repeat
// 20
// --heap-pages
// 4096

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `filecoindot`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> filecoindot::WeightInfo for WeightInfo<T> {
	// Storage: Filecoindot Relayers (r:1 w:1)
	// Storage: Filecoindot RelayerCount (r:1 w:1)
	fn add_relayer() -> Weight {
		(15_411_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Filecoindot Relayers (r:1 w:1)
	// Storage: Filecoindot VoteThreshold (r:1 w:0)
	// Storage: Filecoindot RelayerCount (r:1 w:1)
	fn remove_relayer() -> Weight {
		(17_435_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Filecoindot RelayerCount (r:1 w:0)
	// Storage: Filecoindot VoteThreshold (r:0 w:1)
	fn set_vote_threshold() -> Weight {
		(11_321_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Filecoindot Relayers (r:1 w:0)
	// Storage: Filecoindot VerifiedBlocks (r:1 w:1)
	// Storage: Filecoindot BlockSubmissionProposals (r:1 w:1)
	// Storage: Filecoindot VotingPeriod (r:1 w:0)
	// Storage: Filecoindot BlockProposalVotes (r:1 w:1)
	// Storage: Filecoindot VoteThreshold (r:1 w:0)
	// Storage: Filecoindot MessageRootCidCounter (r:1 w:1)
	fn submit_block_vote() -> Weight {
		(50_491_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Filecoindot VerifiedBlocks (r:1 w:1)
	// Storage: Filecoindot BlockSubmissionProposals (r:1 w:1)
	// Storage: Filecoindot VoteThreshold (r:1 w:0)
	// Storage: Filecoindot MessageRootCidCounter (r:0 w:1)
	fn close_block_proposal() -> Weight {
		(25_034_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Filecoindot VerifiedBlocks (r:1 w:0)
	fn verify_receipt() -> Weight {
		(7_567_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Filecoindot VerifiedBlocks (r:1 w:0)
	fn verify_state() -> Weight {
		(125_020_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Filecoindot VerifiedBlocks (r:1 w:0)
	fn verify_message() -> Weight {
		(125_149_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
}
